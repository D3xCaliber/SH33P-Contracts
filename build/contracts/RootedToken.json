{
  "contractName": "RootedToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "exist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidityController",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPancakePair",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidityPairLocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfTokenHolders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "recoverTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidityController",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_canControl",
          "type": "bool"
        }
      ],
      "name": "setLiquidityController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPancakePair",
          "name": "_liquidityPair",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_locked",
          "type": "bool"
        }
      ],
      "name": "setLiquidityLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITransferGate",
          "name": "_transferGate",
          "type": "address"
        }
      ],
      "name": "setTransferGate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenHolder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferGate",
      "outputs": [
        {
          "internalType": "contract ITransferGate",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "setMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPancakePair\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityPairLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfTokenHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityController\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_canControl\",\"type\":\"bool\"}],\"name\":\"setLiquidityController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPancakePair\",\"name\":\"_liquidityPair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_locked\",\"type\":\"bool\"}],\"name\":\"setLiquidityLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransferGate\",\"name\":\"_transferGate\",\"type\":\"address\"}],\"name\":\"setTransferGate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenHolder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferGate\",\"outputs\":[{\"internalType\":\"contract ITransferGate\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/G/projects/degen-protocol/SH33P-contracts/contracts/RootedToken.sol\":\"RootedToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/G/projects/degen-protocol/SH33P-contracts/contracts/Address.sol\":{\"keccak256\":\"0x4fa91b8306ead1fad3c01df8d9459f2995dcb799d8e26b084e464d880ec5429d\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://0b8f93de75a27b39eff0f085a6377e86ae79bd4eed5770ce751ff2a7b06df286\",\"dweb:/ipfs/QmPMHTq1zVfzJyV8HHBexm85VgvMN2CvxnBcRgibuREZBK\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/ERC20.sol\":{\"keccak256\":\"0xb2d6025bc1273fa5fb8d9c58f59696c7c1d47cbe5aea17880a8bf802d9d28b4c\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://c3323366067d413ce70e142696a977ffe226c8accfc9124c1a66046cab600628\",\"dweb:/ipfs/Qmf3uvutmGgEp9Mw5w7QuG8Nrh8yamhcf6XU9RYzGSS92L\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/GatedERC20.sol\":{\"keccak256\":\"0x6e2ce3f7808b909bcc3ad3ec85e0589cf42e784a09e8162d2c4b3bff4749ca4a\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://72f7231575196812147fb5b770d12140f214dd782bad19d3b86772f3fc3760b2\",\"dweb:/ipfs/Qme2o5GQQnXyLzTSSXinsxXaGS4RfSoxueNkgt5e2APymU\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/IERC20.sol\":{\"keccak256\":\"0xf84e080b9c4f498fd59e202f0d772cc663945dade21b44aa12a89916ecc6579c\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://5f7be2a1fb132b70ea120323b26d609b6973e67ac1dc358ec79818089bbdf0a4\",\"dweb:/ipfs/QmTeKVaZWBziHYHN5KhuFdxkLw5MrkwpSSPHTV9eqVTMaq\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/IGatedERC20.sol\":{\"keccak256\":\"0xa2a2d46b370e58b25271d887abd32e2953e919e8e63c42a439a2ed9de8bd9799\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://ff19a80cba9851173700c92f79984edc3c42d0a76da86a4488a588ed8db23f1f\",\"dweb:/ipfs/QmbhK53dCUa7VJWCtALY9suajJgyUvh6WUDPrxDjqA8stG\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/ILiquidityLockedERC20.sol\":{\"keccak256\":\"0x4d568b201e8c8bbeddfa2457a4121d0badcc018db22643c0aca1c77c9d82a919\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://b8ba57a8fa743983527de886cf284991d78284d204422b9a3d89768964d48467\",\"dweb:/ipfs/QmXgdph3QBBep38P5TLZckEQV9mDHpsTxH5EW4qV912obu\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/IOwned.sol\":{\"keccak256\":\"0xebc7ef4b5d4316d8f3be90993cad2ea7cb94e0a2aa863748cb6968952933bd7c\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://37a49d9ff9c553364b93b53a68f122f856ea3115cf2a864473fdb3c4cc256c8a\",\"dweb:/ipfs/QmNLqpG1rdmt51XAmubcEL1PzM9ULbPrBfA7cUWLJYPJRJ\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/IPancakePair.sol\":{\"keccak256\":\"0x17a73268b07794fd002c3835f9b270f42b03622bd385bc0238f5c77aca6f0196\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://d02f693b07389013f64ece6a682e5f61250fcf7af013198483e1e9f5e08fa20a\",\"dweb:/ipfs/QmazsZaFB2zzCKivtQsnFSE3P3hT8aJjV2ubHSiB43RVPi\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/ITokensRecoverable.sol\":{\"keccak256\":\"0x888b62e09df5335691219c4bedba74ea0b957171de1000b37b0ea9e8fa3ec311\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://33b12c17b1d535fa346b3fb98fc25fee67c7ab814abd7013a8d7f1f800df3d41\",\"dweb:/ipfs/QmWtgu1TwkF4iZN2pyE9rV8DDaYdg7qp91gawX1L6yDXKu\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/ITransferGate.sol\":{\"keccak256\":\"0x64a4e8d2093573b0530a13b48d222d5ca7e6ecb3381fc7179a504d433a93eebf\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://2cb4302ab07c561e903758314ce7b2ea79587d9281bb7ee051517b66e84e2d3d\",\"dweb:/ipfs/QmWkEC3nmDXywuZ5xLryHo1YrFrnvodpbMviSDGDELNyj5\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/LiquidityLockedERC20.sol\":{\"keccak256\":\"0x669b25283ff85f9a6791524047bfa969cc9f9e2ca1f9840f004d74bf6ee984e0\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://087e0008a288e4c2c08393e84fea595839b90b5909e272835f4362cdad849254\",\"dweb:/ipfs/QmTLB32TnfNBrMQdzDknCGeTSEbkhn9fvENYKAs9Nx65K8\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/Owned.sol\":{\"keccak256\":\"0x72b25ffd841e84099dbc2d3fb7160564e1d72672065c6484011dd7cbbdd03aca\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://1a011c229d72c1ea9df7c68da697e84641895bb72325c79ebd9f084b4f8d3622\",\"dweb:/ipfs/QmaEoNr6iB1fFEs9wacGBnbFiq96QUfqUZFKY3w7PbA6Ep\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/RootedToken.sol\":{\"keccak256\":\"0x4ceecbfdb33870a4f4224bbc3a2b5a4d457bc188b3b81c621a0b420d3653a889\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://7b288c58294fde534bd03520476da19d3316b5f2708fc90cb19cfca0e0eff186\",\"dweb:/ipfs/QmbYDnf99sq7YMxQLkuusWkdASEGz4VXHmFQNGDEaiV1Eg\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/SafeERC20.sol\":{\"keccak256\":\"0x6e67a018e1881b8b305e3e75f1d580dfde02572fe2d0cb2dbf5447f0d8ba14a1\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://3530c9d3eedb2a42dd48f7e520bbae863daae3a885c37ef1ac62bb6aa5d0332d\",\"dweb:/ipfs/QmUaAx3SPeadtAxoouK1xbQo8B9TCoJXyLkcGzq4ewEFkX\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/SafeMath.sol\":{\"keccak256\":\"0xf49ea61b9c25c4d62168dcafb7c6c015bb89379b25baadad78295136dda7d08e\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://e0695335460c9b9bd7dc26921f5204c43de95d5e33e6ab221e5fc5ab1dd1bf47\",\"dweb:/ipfs/QmUSUAjJmb9jitYCYkKbHeAbdBcMeRsMEFz4wZUZjZzkKY\"]},\"/G/projects/degen-protocol/SH33P-contracts/contracts/TokensRecoverable.sol\":{\"keccak256\":\"0xd7c6d790f92953b64dfb8b098252642903e83b975c84f33040ae2adb38fb463a\",\"license\":\"U-U-U-UPPPPP\",\"urls\":[\"bzz-raw://a26156b805378e4f0f65c9554bd7a39f8b659841712e9fd13d783f762934c520\",\"dweb:/ipfs/QmSn7DFPozZ3cHxJ3EgkRUoYtdPjcmWUQYPE5BA4pefmxQ\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c806361d8c817116100f9578063a9059cbb11610097578063b834aa2011610071578063b834aa20146108ce578063dd62ed3e14610928578063f2fde38b146109a0578063fca3b5aa146109e4576101c4565b8063a9059cbb146107dc578063ab27c58b14610840578063b49753431461089a576101c4565b80638da5cb5b116100d35780638da5cb5b1461069357806395d89b41146106c7578063a0712d681461074a578063a457c2d714610778576101c4565b806361d8c8171461059f57806370a08231146105e3578063862a4bf21461063b576101c4565b8063313ce56711610166578063449113f211610140578063449113f21461049b5780634dfefc4b146104eb5780634e71e0c814610545578063528d8b211461054f576101c4565b8063313ce567146103e8578063395093511461040957806342966c681461046d576101c4565b806316114acd116101a257806316114acd146102e4578063178ef3071461032857806318160ddd1461034657806323b872dd14610364576101c4565b806306fdde03146101c9578063075461721461024c578063095ea7b314610280575b600080fd5b6101d1610a28565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102115780820151818401526020810190506101f6565b50505050905090810190601f16801561023e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610254610ac6565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102cc6004803603604081101561029657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aec565b60405180821515815260200191505060405180910390f35b610326600480360360208110156102fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b03565b005b610330610ca7565b6040518082815260200191505060405180910390f35b61034e610cad565b6040518082815260200191505060405180910390f35b6103d06004803603606081101561037a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cb3565b60405180821515815260200191505060405180910390f35b6103f0610dfa565b604051808260ff16815260200191505060405180910390f35b6104556004803603604081101561041f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e0d565b60405180821515815260200191505060405180910390f35b6104996004803603602081101561048357600080fd5b8101908080359060200190929190505050610eb2565b005b6104e9600480360360408110156104b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610ebf565b005b61052d6004803603602081101561050157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111b0565b60405180821515815260200191505060405180910390f35b61054d6111d0565b005b61059d6004803603604081101561056557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061132b565b005b6105e1600480360360208110156105b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611449565b005b610625600480360360208110156105f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611550565b6040518082815260200191505060405180910390f35b6106676004803603602081101561065157600080fd5b8101908080359060200190929190505050611b59565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61069b611b98565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106cf611bbe565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561070f5780820151818401526020810190506106f4565b50505050905090810190601f16801561073c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107766004803603602081101561076057600080fd5b8101908080359060200190929190505050611c5c565b005b6107c46004803603604081101561078e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e22565b60405180821515815260200191505060405180910390f35b610828600480360360408110156107f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ee1565b60405180821515815260200191505060405180910390f35b6108826004803603602081101561085657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612026565b60405180821515815260200191505060405180910390f35b6108a2612046565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610910600480360360208110156108e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061206c565b60405180821515815260200191505060405180910390f35b61098a6004803603604081101561093e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061208c565b6040518082815260200191505060405180910390f35b6109e2600480360360208110156109b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120b1565b005b610a26600480360360208110156109fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121b8565b005b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610abe5780601f10610a9357610100808354040283529160200191610abe565b820191906000526020600020905b815481529060010190602001808311610aa157829003601f168201915b505050505081565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610af93384846122bf565b6001905092915050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4f776e6572206f6e6c790000000000000000000000000000000000000000000081525060200191505060405180910390fd5b610bcf816124b6565b610bd857600080fd5b610ca4338273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c4357600080fd5b505afa158015610c57573d6000803e3d6000fd5b505050506040513d6020811015610c6d57600080fd5b81019080805190602001909291905050508373ffffffffffffffffffffffffffffffffffffffff166124ef9092919063ffffffff16565b50565b60095481565b60025481565b6000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610d1657610d116001612591565b610de6565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff16815260200160001515815250600d60008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160186101000a81548160ff0219169083151502179055509050505b610df18484846127de565b90509392505050565b600560009054906101000a900460ff1681565b6000610ea83384610ea385600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128d790919063ffffffff16565b6122bf565b6001905092915050565b610ebc338261295f565b50565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610f7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4c697175696469747920636f6e74726f6c6c6572206f6e6c790000000000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610fdb57600080fd5b505afa158015610fef573d6000803e3d6000fd5b505050506040513d602081101561100557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614806110e357503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561109057600080fd5b505afa1580156110a4573d6000803e3d6000fd5b505050506040513d60208110156110ba57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16145b611155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f556e72656c61746564207061697200000000000000000000000000000000000081525060200191505060405180910390fd5b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600a6020528060005260406000206000915054906101000a900460ff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461122a57600080fd5b6000600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a333600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4f776e6572206f6e6c790000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461150c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4f776e6572206f6e6c790000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080339050600b60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611b48576115b061382e565b600d6040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160189054906101000a900460ff16151515158152505090503273ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614801561169e575043816020015163ffffffff16145b611710576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4c6971756964697479206973206c6f636b65640000000000000000000000000081525060200191505060405180910390fd5b806040015115611b46576000808373ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561176357600080fd5b505afa158015611777573d6000803e3d6000fd5b505050506040513d606081101561178d57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915060008473ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561181f57600080fd5b505afa158015611833573d6000803e3d6000fd5b505050506040513d602081101561184957600080fd5b810190808051906020019092919050505090503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a2b57818573ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156118d757600080fd5b505afa1580156118eb573d6000803e3d6000fd5b505050506040513d602081101561190157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561197857600080fd5b505afa15801561198c573d6000803e3d6000fd5b505050506040513d60208110156119a257600080fd5b810190808051906020019092919050505010611a26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4c6971756964697479206973206c6f636b65640000000000000000000000000081525060200191505060405180910390fd5b611b42565b828173ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611a9357600080fd5b505afa158015611aa7573d6000803e3d6000fd5b505050506040513d6020811015611abd57600080fd5b810190808051906020019092919050505010611b41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4c6971756964697479206973206c6f636b65640000000000000000000000000081525060200191505060405180910390fd5b5b5050505b505b611b5183612b23565b915050919050565b60088181548110611b6957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c545780601f10611c2957610100808354040283529160200191611c54565b820191906000526020600020905b815481529060010190602001808311611c3757829003601f168201915b505050505081565b600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f742061206d696e746572000000000000000000000000000000000000000081525060200191505060405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611d6757600080fd5b505afa158015611d7b573d6000803e3d6000fd5b505050506040513d6020811015611d9157600080fd5b810190808051906020019092919050505014611e15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f416c7265616479206d696e74656400000000000000000000000000000000000081525060200191505060405180910390fd5b611e1f3382612b6b565b50565b6000611ed73384611ed285604051806060016040528060258152602001613c8c60259139600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d329092919063ffffffff16565b6122bf565b6001905092915050565b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611f4457611f3f6000612591565b612014565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff16815260200160001515815250600d60008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160186101000a81548160ff0219169083151502179055509050505b61201e8383612df2565b905092915050565b600b6020528060005260406000206000915054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c6020528060005260406000206000915054906101000a900460ff1681565b6001602052816000526040600020602052806000526040600020600091509150505481565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4f776e6572206f6e6c790000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461227b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4f776e6572206f6e6c790000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612345576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180613c3e6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123cb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180613b566022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b60003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614159050919050565b61258c8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612e09565b505050565b61259961382e565b600d6040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160189054906101000a900460ff161515151581525050905061264761382e565b60405180606001604052803273ffffffffffffffffffffffffffffffffffffffff1681526020014363ffffffff1681526020018415158152509050806000015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff161415806126d95750806020015163ffffffff16826020015163ffffffff1614155b806126f05750806040015115158260400151151514155b612745576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180613b9e6031913960400191505060405180910390fd5b80600d60008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160186101000a81548160ff021916908315150217905550905050505050565b60006127eb848484612ef8565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146128cb576128ca85336128c586604051806060016040528060288152602001613bf56028913986612d329092919063ffffffff16565b6122bf565b5b60019150509392505050565b600080828401905083811015612955576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156129e5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613c1d6021913960400191505060405180910390fd5b6129f18260008361353f565b612a5c81604051806060016040528060228152602001613b34602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d329092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612ab38160025461354490919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612c0e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b612c1a6000838361353f565b612c2f816002546128d790919063ffffffff16565b600281905550612c86816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128d790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000838311158290612ddf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612da4578082015181840152602081019050612d89565b50505050905090810190601f168015612dd15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000612dff338484612ef8565b6001905092915050565b6060612e6b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661358e9092919063ffffffff16565b9050600081511115612ef357808060200190516020811015612e8c57600080fd5b8101908080519060200190929190505050612ef2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613c62602a913960400191505060405180910390fd5b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612f68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f5f90613a47565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612fd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fcf90613a27565b60405180910390fd5b612fe383838361353f565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16613102576008829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506009600081548092919060010191905055506001600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000829050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146133935760008273ffffffffffffffffffffffffffffffffffffffff16636052970c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156131aa57600080fd5b505afa1580156131be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131e29190613897565b905060008373ffffffffffffffffffffffffffffffffffffffff166395c47d06338989896040518563ffffffff1660e01b815260040161322594939291906139e2565b602060405180830381600087803b15801561323f57600080fd5b505af1158015613253573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061327791906138c0565b90506000811115613390576132d3816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128d790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516133729190613a67565b60405180910390a361338d818461354490919063ffffffff16565b92505b50505b6133fe83604051806060016040528060268152602001613b78602691396000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612d329092919063ffffffff16565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550613491816000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546128d790919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516135309190613a67565b60405180910390a35050505050565b505050565b600061358683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d32565b905092915050565b606061359d84846000856135a6565b90509392505050565b606082471015613601576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613bcf6026913960400191505060405180910390fd5b61360a8561374f565b61367c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106136cc57805182526020820191506020810190506020830392506136a9565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461372e576040519150601f19603f3d011682016040523d82523d6000602084013e613733565b606091505b5091509150613743828286613762565b92505050949350505050565b600080823b905060008111915050919050565b6060831561377257829050613827565b6000835111156137855782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156137ec5780820151818401526020810190506137d1565b50505050905090810190601f1680156138195780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b9392505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff1681526020016000151581525090565b60008151905061387c81613b05565b92915050565b60008151905061389181613b1c565b92915050565b6000602082840312156138a957600080fd5b60006138b78482850161386d565b91505092915050565b6000602082840312156138d257600080fd5b60006138e084828501613882565b91505092915050565b6138f281613acf565b82525050565b61390181613a93565b82525050565b6000613914602383613a82565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061397a602583613a82565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6139dc81613ac5565b82525050565b60006080820190506139f760008301876138e9565b613a0460208301866138f8565b613a1160408301856138f8565b613a1e60608301846139d3565b95945050505050565b60006020820190508181036000830152613a4081613907565b9050919050565b60006020820190508181036000830152613a608161396d565b9050919050565b6000602082019050613a7c60008301846139d3565b92915050565b600082825260208201905092915050565b6000613a9e82613aa5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613ada82613ae1565b9050919050565b6000613aec82613af3565b9050919050565b6000613afe82613aa5565b9050919050565b613b0e81613a93565b8114613b1957600080fd5b50565b613b2581613ac5565b8114613b3057600080fd5b5056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654c6971756964697479206973206c6f636b65642028506c656173652074727920616761696e206e65787420626c6f636b29416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212208bb9b3030cf8513e81a66c67473335994d5ec460860a5cad9080b592d12f36fa64736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4819:62",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:62"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:62"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:62"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:62",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:62",
                "type": ""
              }
            ],
            "src": "7:143:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "219:80:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "229:22:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "238:5:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "238:13:62"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "229:5:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "287:5:62"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "260:26:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:33:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:33:62"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "197:6:62",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "205:3:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "213:5:62",
                "type": ""
              }
            ],
            "src": "156:143:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "382:205:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "428:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "437:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "440:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "430:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "430:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "430:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "403:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "412:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "399:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "399:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "424:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "395:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:32:62"
                  },
                  "nodeType": "YulIf",
                  "src": "392:2:62"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "454:126:62",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "468:15:62",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "482:1:62",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "472:6:62",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "496:74:62",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "542:9:62"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "553:6:62"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "538:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "538:22:62"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "562:7:62"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "506:31:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:64:62"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "496:6:62"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "352:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "363:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "375:6:62",
                "type": ""
              }
            ],
            "src": "305:282:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "670:205:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "716:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "725:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "728:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "718:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "718:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "718:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "691:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "700:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "687:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "687:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "712:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "683:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "683:32:62"
                  },
                  "nodeType": "YulIf",
                  "src": "680:2:62"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "742:126:62",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "756:15:62",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "770:1:62",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "760:6:62",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "784:74:62",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "830:9:62"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "841:6:62"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "826:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "826:22:62"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "850:7:62"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "794:31:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "794:64:62"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "784:6:62"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "640:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "651:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "663:6:62",
                "type": ""
              }
            ],
            "src": "593:282:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "954:74:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "971:3:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1015:5:62"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "976:38:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "976:45:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "964:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:58:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "964:58:62"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "942:5:62",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "949:3:62",
                "type": ""
              }
            ],
            "src": "881:147:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1099:53:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1116:3:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1139:5:62"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1121:17:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1121:24:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1109:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1109:37:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1109:37:62"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1087:5:62",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1094:3:62",
                "type": ""
              }
            ],
            "src": "1034:118:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1304:221:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1314:74:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1380:3:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1385:2:62",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1321:58:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1321:67:62"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1314:3:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1409:3:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1414:1:62",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1405:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1405:11:62"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1418:34:62",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1398:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1398:55:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1398:55:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1474:3:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1479:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1470:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1470:12:62"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1484:5:62",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1463:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1463:27:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1463:27:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1500:19:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1511:3:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1516:2:62",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1507:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1507:12:62"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1500:3:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1292:3:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1300:3:62",
                "type": ""
              }
            ],
            "src": "1158:367:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1677:223:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1687:74:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1753:3:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1758:2:62",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1694:58:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1694:67:62"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1687:3:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1782:3:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1787:1:62",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1778:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1778:11:62"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1791:34:62",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1771:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1771:55:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1771:55:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1847:3:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1852:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1843:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1843:12:62"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1857:7:62",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1836:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1836:29:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1836:29:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1875:19:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1886:3:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1891:2:62",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1882:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1882:12:62"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1875:3:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1665:3:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1673:3:62",
                "type": ""
              }
            ],
            "src": "1531:369:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1971:53:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1988:3:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2011:5:62"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1993:17:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1993:24:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1981:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1981:37:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1981:37:62"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1959:5:62",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1966:3:62",
                "type": ""
              }
            ],
            "src": "1906:118:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2220:379:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2230:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2242:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2253:3:62",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2238:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2238:19:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2230:4:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2319:6:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2332:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2343:1:62",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2328:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2328:17:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2267:51:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2267:79:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2267:79:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2400:6:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2413:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2424:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2409:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2409:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2356:43:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2356:72:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2356:72:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2482:6:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2495:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2506:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2491:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2491:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2438:43:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2438:72:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2438:72:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2564:6:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2577:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2588:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2573:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2573:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2520:43:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2520:72:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2520:72:62"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2168:9:62",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2180:6:62",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2188:6:62",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2196:6:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2204:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2215:4:62",
                "type": ""
              }
            ],
            "src": "2030:569:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2776:248:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2786:26:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2798:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2809:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2794:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2794:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2786:4:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2833:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2844:1:62",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2829:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2829:17:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2852:4:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2858:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2848:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2848:20:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2822:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2822:47:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2822:47:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2878:139:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3012:4:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2886:124:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2886:131:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2878:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2756:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2771:4:62",
                "type": ""
              }
            ],
            "src": "2605:419:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3201:248:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3211:26:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3223:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3234:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3219:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3219:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3211:4:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3258:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3269:1:62",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3254:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3254:17:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3277:4:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3283:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3273:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3273:20:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3247:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3247:47:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3247:47:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3303:139:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3437:4:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3311:124:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3311:131:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3303:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3181:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3196:4:62",
                "type": ""
              }
            ],
            "src": "3030:419:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3553:124:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3563:26:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3575:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3586:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3571:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3571:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3563:4:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3643:6:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3656:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3667:1:62",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3652:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3652:17:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3599:43:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3599:71:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3599:71:62"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3525:9:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3537:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3548:4:62",
                "type": ""
              }
            ],
            "src": "3455:222:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3779:73:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3796:3:62"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3801:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3789:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3789:19:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3789:19:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3817:29:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3836:3:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3841:4:62",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3832:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3832:14:62"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3817:11:62"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3751:3:62",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3756:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3767:11:62",
                "type": ""
              }
            ],
            "src": "3683:169:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3903:51:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3913:35:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3942:5:62"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3924:17:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3924:24:62"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3913:7:62"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3885:5:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3895:7:62",
                "type": ""
              }
            ],
            "src": "3858:96:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4005:81:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4015:65:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4030:5:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4037:42:62",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4026:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4026:54:62"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4015:7:62"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3987:5:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3997:7:62",
                "type": ""
              }
            ],
            "src": "3960:126:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4137:32:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4147:16:62",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4158:5:62"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4147:7:62"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4119:5:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4129:7:62",
                "type": ""
              }
            ],
            "src": "4092:77:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4243:66:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4253:50:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4297:5:62"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4266:30:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4266:37:62"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4253:9:62"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4223:5:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4233:9:62",
                "type": ""
              }
            ],
            "src": "4175:134:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4375:66:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4385:50:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4429:5:62"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4398:30:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4398:37:62"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4385:9:62"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4355:5:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4365:9:62",
                "type": ""
              }
            ],
            "src": "4315:126:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4507:53:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4517:37:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4548:5:62"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4530:17:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4530:24:62"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4517:9:62"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4487:5:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4497:9:62",
                "type": ""
              }
            ],
            "src": "4447:113:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4609:79:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4666:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4675:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4678:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4668:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4668:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4668:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4632:5:62"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4657:5:62"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "4639:17:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4639:24:62"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4629:2:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4629:35:62"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4622:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4622:43:62"
                  },
                  "nodeType": "YulIf",
                  "src": "4619:2:62"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4602:5:62",
                "type": ""
              }
            ],
            "src": "4566:122:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4737:79:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4794:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4803:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4806:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4796:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4796:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4796:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4760:5:62"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4785:5:62"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "4767:17:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4767:24:62"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4757:2:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4757:35:62"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4750:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4750:43:62"
                  },
                  "nodeType": "YulIf",
                  "src": "4747:2:62"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4730:5:62",
                "type": ""
              }
            ],
            "src": "4694:122:62"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n\n        mstore(add(pos, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(pos, 32), \"ess\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(pos, 32), \"dress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 62,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "496:440:28:-:0;;;488:2:2;455:35;;;;;;;;;;;;;;;;;;;;362:10:26;330:42;;;;;;;;;;;;;;;;;;;;620:1:5;582:39;;605:24:28;;;;;;;;;;581:105:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;657:5;664:7;736:5:5;743:7;580:5:2;573:4;:12;;;;;;;;;;;;:::i;:::-;;605:7;596:6;:16;;;;;;;;;;;;:::i;:::-;;499:121;;674:91:5;;581:105:24;;496:440:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "496:440:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;385:27:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;575:21:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;919:167:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;427:196:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;582:39:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;341:35:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3121:424:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;455:35:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1522:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2212:95:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;694:358:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;628:37:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;653:222:26;;;:::i;:::-;;1060:178:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;773:134:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1246:926:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;546:29:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;330:42:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;419:29:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:198:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1742:263:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2702:411:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;301:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;497:42:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;365:52:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;257:75:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;525:120:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;637:90:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;385:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;575:21:28:-;;;;;;;;;;;;;:::o;919:167:2:-;1002:4;1019:37;1028:10;1040:7;1049:6;1019:8;:37::i;:::-;1074:4;1067:11;;919:167;;;;:::o;427:196:32:-;477:5:26;;;;;;;;;;;463:19;;:10;:19;;;454:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;518:23:32::1;535:5;518:16;:23::i;:::-;509:33;;;::::0;::::1;;553:62;572:10;584:5;:15;;;608:4;584:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;553:5;:18;;;;:62;;;;;:::i;:::-;427:196:::0;:::o;582:39:5:-;;;;:::o;341:35:2:-;;;;:::o;3121:424:24:-;3227:4;3254:19;:44;3287:9;3254:44;;;;;;;;;;;;;;;;;;;;;;;;;3250:225;;;3315:18;3328:4;3315:12;:18::i;:::-;3250:225;;;3392:71;;;;;;;;3421:1;3392:71;;;;;;3438:1;3392:71;;;;;;3455:5;3392:71;;;;;3375:14;:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3250:225;3492:45;3511:6;3519:9;3530:6;3492:18;:45::i;:::-;3485:52;;3121:424;;;;;:::o;455:35:2:-;;;;;;;;;;;;;:::o;1522:212::-;1610:4;1627:77;1636:10;1648:7;1657:46;1692:10;1657:9;:21;1667:10;1657:21;;;;;;;;;;;;;;;:30;1679:7;1657:30;;;;;;;;;;;;;;;;:34;;:46;;;;:::i;:::-;1627:8;:77::i;:::-;1722:4;1715:11;;1522:212;;;;:::o;2212:95:5:-;2274:25;2280:10;2292:6;2274:5;:25::i;:::-;2212:95;:::o;694:358:24:-;804:19;:31;824:10;804:31;;;;;;;;;;;;;;;;;;;;;;;;;795:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;920:4;885:40;;:14;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:40;;;:84;;;;964:4;929:40;;:14;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:40;;;885:84;876:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1037:7;999:19;:35;1019:14;999:35;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;694:358;;:::o;628:37:5:-;;;;;;;;;;;;;;;;;;;;;;:::o;653:222:26:-;736:10;720:26;;:12;;;;;;;;;;;:26;;;711:36;;;;;;781:1;758:12;;:25;;;;;;;;;;;;;;;;;;827:10;799:39;;820:5;;;;;;;;;;;799:39;;;;;;;;;;;;857:10;849:5;;:18;;;;;;;;;;;;;;;;;;653:222::o;1060:178:24:-;477:5:26;;;;;;;;;;;463:19;;:10;:19;;;454:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1219:11:24::1;1175:19;:41;1195:20;1175:41;;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;1060:178:::0;;:::o;773:134:5:-;477:5:26;;;;;;;;;;;463:19;;:10;:19;;;454:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;886:13:5::1;871:12;;:28;;;;;;;;;;;;;;;;;;773:134:::0;:::o;1246:926:24:-;1312:7;1338:17;1379:10;1338:53;;1406:19;:25;1426:4;1406:25;;;;;;;;;;;;;;;;;;;;;;;;;1402:721;;;1448:22;;:::i;:::-;1473:14;1448:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1526:9;1511:24;;:4;:11;;;:24;;;:60;;;;;1559:12;1539:4;:16;;;:32;;;1511:60;1502:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1614:4;:17;;;1610:502;;;1653:16;1671;1692:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1652:58;;;;;;;;;1729:13;1752:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1729:37;;1816:4;1789:32;;1797:6;1789:32;;;1785:312;;;1904:8;1862:4;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1855:31;;;1895:4;1855:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:57;1846:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:312;;;2045:8;2011:6;:16;;;2036:4;2011:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;2002:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:312;1610:502;;;;1402:721;;2140:24;2156:7;2140:15;:24::i;:::-;2133:31;;;1246:926;;;:::o;546:29:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;330:42:26:-;;;;;;;;;;;;;:::o;419:29:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;735:198:28:-;805:6;;;;;;;;;;;791:20;;:10;:20;;;783:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;869:1;847:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;839:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:25;906:10;918:6;900:5;:25::i;:::-;735:198;:::o;1742:263:2:-;1835:4;1852:123;1861:10;1873:7;1882:92;1917:15;1882:92;;;;;;;;;;;;;;;;;:9;:21;1892:10;1882:21;;;;;;;;;;;;;;;:30;1904:7;1882:30;;;;;;;;;;;;;;;;:34;;:92;;;;;:::i;:::-;1852:8;:123::i;:::-;1993:4;1986:11;;1742:263;;;;:::o;2702:411:24:-;2788:4;2823:19;:54;2864:10;2823:54;;;;;;;;;;;;;;;;;;;;;;;;;2819:236;;;2894:19;2907:5;2894:12;:19::i;:::-;2819:236;;;2972:71;;;;;;;;3001:1;2972:71;;;;;;3018:1;2972:71;;;;;;3035:5;2972:71;;;;;2955:14;:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:236;3072:33;3087:9;3098:6;3072:14;:33::i;:::-;3065:40;;2702:411;;;;:::o;301:57::-;;;;;;;;;;;;;;;;;;;;;;:::o;497:42:5:-;;;;;;;;;;;;;:::o;365:52:24:-;;;;;;;;;;;;;;;;;;;;;;:::o;257:75:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;525:120:26:-;477:5;;;;;;;;;;;463:19;;:10;:19;;;454:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:8:::1;614:12;;:23;;;;;;;;;;;;;;;;;;525:120:::0;:::o;637:90:28:-;477:5:26;;;;;;;;;;;463:19;;:10;:19;;;454:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;712:7:28::1;703:6;;:16;;;;;;;;;;;;;;;;;;637:90:::0;:::o;3376:344:2:-;3495:1;3478:19;;:5;:19;;;;3470:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3576:1;3557:21;;:7;:21;;;;3549:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3658:6;3630:9;:16;3640:5;3630:16;;;;;;;;;;;;;;;:25;3647:7;3630:25;;;;;;;;;;;;;;;:34;;;;3696:7;3680:32;;3689:5;3680:32;;;3705:6;3680:32;;;;;;;;;;;;;;;;;;3376:344;;;:::o;631:142:32:-;702:4;759;733:31;;741:5;733:31;;;;726:38;;631:142;;;:::o;829:177:30:-;912:86;932:5;962:23;;;987:2;991:5;939:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;912:19;:86::i;:::-;829:177;;;:::o;2180:514:24:-;2246:22;;:::i;:::-;2271:14;2246:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2296:23;;:::i;:::-;2322:146;;;;;;;;2357:9;2322:146;;;;;;2401:12;2322:146;;;;;;2443:13;2322:146;;;;;2296:172;;2503:5;:12;;;2488:27;;:4;:11;;;:27;;;;:68;;;;2539:5;:17;;;2519:37;;:4;:16;;;:37;;;;2488:68;:111;;;;2581:5;:18;;;2560:39;;:4;:17;;;:39;;;;2488:111;2479:174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2681:5;2664:14;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:514;;;:::o;1094:420:2:-;1200:4;1217:36;1227:6;1235:9;1246:6;1217:9;:36::i;:::-;1264:20;1287:9;:17;1297:6;1287:17;;;;;;;;;;;;;;;:29;1305:10;1287:29;;;;;;;;;;;;;;;;1264:52;;1355:2;1331:12;:27;1327:158;;1375:98;1384:6;1392:10;1404:68;1421:6;1404:68;;;;;;;;;;;;;;;;;:12;:16;;:68;;;;;:::i;:::-;1375:8;:98::i;:::-;1327:158;1502:4;1495:11;;;1094:420;;;;;:::o;98:185:31:-;156:7;182:9;198:1;194;:5;182:17;;223:1;218;:6;;210:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;274:1;267:8;;;98:185;;;;:::o;2950:418:2:-;3053:1;3034:21;;:7;:21;;;;3026:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3106:49;3127:7;3144:1;3148:6;3106:20;:49::i;:::-;3190:69;3214:6;3190:69;;;;;;;;;;;;;;;;;:10;:19;3201:7;3190:19;;;;;;;;;;;;;;;;:23;;:69;;;;;:::i;:::-;3168:10;:19;3179:7;3168:19;;;;;;;;;;;;;;;:91;;;;3284:23;3300:6;3284:11;;:15;;:23;;;;:::i;:::-;3270:11;:37;;;;3349:1;3323:37;;3332:7;3323:37;;;3353:6;3323:37;;;;;;;;;;;;;;;;;;2950:418;;:::o;628:102::-;696:7;714:10;:13;725:1;714:13;;;;;;;;;;;;;;;;707:20;;628:102;;;:::o;2564:378::-;2667:1;2648:21;;:7;:21;;;;2640:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2718:49;2747:1;2751:7;2760:6;2718:20;:49::i;:::-;2794:23;2810:6;2794:11;;:15;;:23;;;;:::i;:::-;2780:11;:37;;;;2850:31;2874:6;2850:10;:19;2861:7;2850:19;;;;;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;2828:10;:19;2839:7;2828:19;;;;;;;;;;;;;;;:53;;;;2918:7;2897:37;;2914:1;2897:37;;;2927:6;2897:37;;;;;;;;;;;;;;;;;;2564:378;;:::o;441:196:31:-;527:7;566:1;561;:6;;569:12;553:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;593:9;609:1;605;:5;593:17;;628:1;621:8;;;441:196;;;;;:::o;738:173:2:-;824:4;841:40;851:10;863:9;874:6;841:9;:40::i;:::-;899:4;892:11;;738:173;;;;:::o;2072:761:30:-;2496:23;2522:69;2550:4;2522:69;;;;;;;;;;;;;;;;;2530:5;2522:27;;;;:69;;;;;:::i;:::-;2496:95;;2626:1;2606:10;:17;:21;2602:224;;;2748:10;2737:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2602:224;2072:761;;;:::o;915:1289:5:-;1054:1;1036:20;;:6;:20;;;;1028:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1138:1;1117:23;;:9;:23;;;;1109:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1193:47;1214:6;1222:9;1233:6;1193:20;:47::i;:::-;1255:5;:16;1261:9;1255:16;;;;;;;;;;;;;;;;;;;;;;;;;1251:150;;1287:11;1304:9;1287:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1329:20;;:22;;;;;;;;;;;;;1385:4;1366:5;:16;1372:9;1366:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;1251:150;1411:27;1441:12;;;;;;;;;;;1411:42;;1464:17;1484:6;1464:26;;1539:1;1505:36;;1513:13;1505:36;;;1501:467;;1568:16;1587:13;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1568:46;;1629:12;1644:13;:28;;;1673:10;1685:6;1693:9;1704:6;1644:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1629:82;;1737:1;1730:4;:8;1726:220;;;1794:30;1819:4;1794:10;:20;1805:8;1794:20;;;;;;;;;;;;;;;;:24;;:30;;;;:::i;:::-;1771:10;:20;1782:8;1771:20;;;;;;;;;;;;;;;:53;;;;1865:8;1848:32;;1857:6;1848:32;;;1875:4;1848:32;;;;;;:::i;:::-;;;;;;;;1911:19;1925:4;1911:9;:13;;:19;;;;:::i;:::-;1899:31;;1726:220;1501:467;;;1999:72;2022:6;1999:72;;;;;;;;;;;;;;;;;:10;:18;2010:6;1999:18;;;;;;;;;;;;;;;;:22;;:72;;;;;:::i;:::-;1978:10;:18;1989:6;1978:18;;;;;;;;;;;;;;;:93;;;;2106:36;2132:9;2106:10;:21;2117:9;2106:21;;;;;;;;;;;;;;;;:25;;:36;;;;:::i;:::-;2082:10;:21;2093:9;2082:21;;;;;;;;;;;;;;;:60;;;;2175:9;2158:38;;2167:6;2158:38;;;2186:9;2158:38;;;;;;:::i;:::-;;;;;;;;915:1289;;;;;:::o;3825:92:2:-;;;;:::o;291:142:31:-;349:7;382:43;386:1;389;382:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;375:50;;291:142;;;;:::o;783:195:0:-;886:12;918:52;940:6;948:4;954:1;957:12;918:21;:52::i;:::-;911:59;;783:195;;;;;:::o;1220:470::-;1347:12;1405:5;1380:21;:30;;1372:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1472:18;1483:6;1472:10;:18::i;:::-;1464:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:12;1552:23;1579:6;:11;;1599:5;1607:4;1579:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1537:75;;;;1630:52;1648:7;1657:10;1669:12;1630:17;:52::i;:::-;1623:59;;;;1220:470;;;;;;:::o;95:174::-;155:4;172:12;226:7;214:20;206:28;;260:1;253:4;:8;246:15;;;95:174;;;:::o;2852:515::-;2967:12;2996:7;2992:368;;;3027:10;3020:17;;;;2992:368;3094:1;3074:10;:17;:21;3070:279;;;3177:10;3171:17;3238:15;3225:10;3221:2;3217:19;3210:44;3125:148;3320:12;3313:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2852:515;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:143:62:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:282::-;;424:2;412:9;403:7;399:23;395:32;392:2;;;440:1;437;430:12;392:2;482:1;506:64;562:7;553:6;542:9;538:22;506:64;:::i;:::-;496:74;;454:126;382:205;;;;:::o;593:282::-;;712:2;700:9;691:7;687:23;683:32;680:2;;;728:1;725;718:12;680:2;770:1;794:64;850:7;841:6;830:9;826:22;794:64;:::i;:::-;784:74;;742:126;670:205;;;;:::o;881:147::-;976:45;1015:5;976:45;:::i;:::-;971:3;964:58;954:74;;:::o;1034:118::-;1121:24;1139:5;1121:24;:::i;:::-;1116:3;1109:37;1099:53;;:::o;1158:367::-;;1321:67;1385:2;1380:3;1321:67;:::i;:::-;1314:74;;1418:34;1414:1;1409:3;1405:11;1398:55;1484:5;1479:2;1474:3;1470:12;1463:27;1516:2;1511:3;1507:12;1500:19;;1304:221;;;:::o;1531:369::-;;1694:67;1758:2;1753:3;1694:67;:::i;:::-;1687:74;;1791:34;1787:1;1782:3;1778:11;1771:55;1857:7;1852:2;1847:3;1843:12;1836:29;1891:2;1886:3;1882:12;1875:19;;1677:223;;;:::o;1906:118::-;1993:24;2011:5;1993:24;:::i;:::-;1988:3;1981:37;1971:53;;:::o;2030:569::-;;2253:3;2242:9;2238:19;2230:27;;2267:79;2343:1;2332:9;2328:17;2319:6;2267:79;:::i;:::-;2356:72;2424:2;2413:9;2409:18;2400:6;2356:72;:::i;:::-;2438;2506:2;2495:9;2491:18;2482:6;2438:72;:::i;:::-;2520;2588:2;2577:9;2573:18;2564:6;2520:72;:::i;:::-;2220:379;;;;;;;:::o;2605:419::-;;2809:2;2798:9;2794:18;2786:26;;2858:9;2852:4;2848:20;2844:1;2833:9;2829:17;2822:47;2886:131;3012:4;2886:131;:::i;:::-;2878:139;;2776:248;;;:::o;3030:419::-;;3234:2;3223:9;3219:18;3211:26;;3283:9;3277:4;3273:20;3269:1;3258:9;3254:17;3247:47;3311:131;3437:4;3311:131;:::i;:::-;3303:139;;3201:248;;;:::o;3455:222::-;;3586:2;3575:9;3571:18;3563:26;;3599:71;3667:1;3656:9;3652:17;3643:6;3599:71;:::i;:::-;3553:124;;;;:::o;3683:169::-;;3801:6;3796:3;3789:19;3841:4;3836:3;3832:14;3817:29;;3779:73;;;;:::o;3858:96::-;;3924:24;3942:5;3924:24;:::i;:::-;3913:35;;3903:51;;;:::o;3960:126::-;;4037:42;4030:5;4026:54;4015:65;;4005:81;;;:::o;4092:77::-;;4158:5;4147:16;;4137:32;;;:::o;4175:134::-;;4266:37;4297:5;4266:37;:::i;:::-;4253:50;;4243:66;;;:::o;4315:126::-;;4398:37;4429:5;4398:37;:::i;:::-;4385:50;;4375:66;;;:::o;4447:113::-;;4530:24;4548:5;4530:24;:::i;:::-;4517:37;;4507:53;;;:::o;4566:122::-;4639:24;4657:5;4639:24;:::i;:::-;4632:5;4629:35;4619:2;;4678:1;4675;4668:12;4619:2;4609:79;:::o;4694:122::-;4767:24;4785:5;4767:24;:::i;:::-;4760:5;4757:35;4747:2;;4806:1;4803;4796:12;4747:2;4737:79;:::o",
  "source": "// SPDX-License-Identifier: U-U-U-UPPPPP!!!\r\npragma solidity ^0.7.4;\r\n\r\n/* ROOTKIT: upToken\r\n\r\nAn upToken is a token that gains in value against whatever token it is paired with.\r\n- Raise any token using the Market Generation and Market Distribution contracts\r\n- An equal amount of upToken will be minted\r\n- combine with an ERC-31337 version of the raised token.\r\n- Send LP tokens to the Liquidity Controller for efficient access to market features\r\n*/\r\n\r\nimport \"./LiquidityLockedERC20.sol\";\r\n\r\ncontract RootedToken is LiquidityLockedERC20(\"Degen Protocol\", \"SH33P\") {\r\n    address public minter;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    function setMinter(address _minter) public ownerOnly() {\r\n        minter = _minter;\r\n    }\r\n\r\n    function mint(uint256 amount) public {\r\n        require(msg.sender == minter, \"Not a minter\");\r\n        require(this.totalSupply() == 0, \"Already minted\");\r\n        _mint(msg.sender, amount);\r\n    }\r\n}",
  "sourcePath": "G:/projects/degen-protocol/SH33P-contracts/contracts/RootedToken.sol",
  "ast": {
    "absolutePath": "/G/projects/degen-protocol/SH33P-contracts/contracts/RootedToken.sol",
    "exportedSymbols": {
      "Address": [
        284
      ],
      "ERC20": [
        753
      ],
      "GatedERC20": [
        1548
      ],
      "IERC20": [
        1632
      ],
      "IGatedERC20": [
        1705
      ],
      "ILiquidityLockedERC20": [
        1802
      ],
      "IOwned": [
        1865
      ],
      "IPancakePair": [
        2170
      ],
      "ITokensRecoverable": [
        2575
      ],
      "ITransferGate": [
        2596
      ],
      "LiquidityLockedERC20": [
        2987
      ],
      "Owned": [
        3238
      ],
      "RootedToken": [
        3771
      ],
      "SafeERC20": [
        4295
      ],
      "SafeMath": [
        4504
      ],
      "TokensRecoverable": [
        4565
      ]
    },
    "id": 3772,
    "license": "U-U-U-UPPPPP",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3718,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:28"
      },
      {
        "absolutePath": "/G/projects/degen-protocol/SH33P-contracts/contracts/LiquidityLockedERC20.sol",
        "file": "./LiquidityLockedERC20.sol",
        "id": 3719,
        "nodeType": "ImportDirective",
        "scope": 3772,
        "sourceUnit": 2988,
        "src": "456:36:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "446567656e2050726f746f636f6c",
                "id": 3721,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "541:16:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_e3e1ae1de6ab2591a5a2b059e13729e8d6c21a1ff8e185b2c8259df6eb4924e5",
                  "typeString": "literal_string \"Degen Protocol\""
                },
                "value": "Degen Protocol"
              },
              {
                "hexValue": "5348333350",
                "id": 3722,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "559:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4defbbbf8de2585ea53b4a9524c2af1bd73df02df27809b5e69163c8a34a5d95",
                  "typeString": "literal_string \"SH33P\""
                },
                "value": "SH33P"
              }
            ],
            "baseName": {
              "id": 3720,
              "name": "LiquidityLockedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2987,
              "src": "520:20:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidityLockedERC20_$2987",
                "typeString": "contract LiquidityLockedERC20"
              }
            },
            "id": 3723,
            "nodeType": "InheritanceSpecifier",
            "src": "520:47:28"
          }
        ],
        "contractDependencies": [
          753,
          1548,
          1632,
          1705,
          1802,
          1865,
          2575,
          2987,
          3238,
          4565
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3771,
        "linearizedBaseContracts": [
          3771,
          2987,
          1802,
          1548,
          1705,
          4565,
          2575,
          3238,
          1865,
          753,
          1632
        ],
        "name": "RootedToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "07546172",
            "id": 3725,
            "mutability": "mutable",
            "name": "minter",
            "nodeType": "VariableDeclaration",
            "scope": 3771,
            "src": "575:21:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3724,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "575:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3728,
              "nodeType": "Block",
              "src": "619:10:28",
              "statements": []
            },
            "id": 3729,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "616:2:28"
            },
            "returnParameters": {
              "id": 3727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "619:0:28"
            },
            "scope": 3771,
            "src": "605:24:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3740,
              "nodeType": "Block",
              "src": "692:35:28",
              "statements": [
                {
                  "expression": {
                    "id": 3738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3736,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3725,
                      "src": "703:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3737,
                      "name": "_minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3731,
                      "src": "712:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "703:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3739,
                  "nodeType": "ExpressionStatement",
                  "src": "703:16:28"
                }
              ]
            },
            "functionSelector": "fca3b5aa",
            "id": 3741,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3734,
                "modifierName": {
                  "id": 3733,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3194,
                  "src": "680:9:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "680:11:28"
              }
            ],
            "name": "setMinter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3731,
                  "mutability": "mutable",
                  "name": "_minter",
                  "nodeType": "VariableDeclaration",
                  "scope": 3741,
                  "src": "656:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "655:17:28"
            },
            "returnParameters": {
              "id": 3735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "692:0:28"
            },
            "scope": 3771,
            "src": "637:90:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3769,
              "nodeType": "Block",
              "src": "772:161:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3747,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "791:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "791:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3749,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3725,
                          "src": "805:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "791:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061206d696e746572",
                        "id": 3751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "813:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8f0daa39c39bac816583bed47118324ef9cb0bd9d20d7485ca08e731f62c009",
                          "typeString": "literal_string \"Not a minter\""
                        },
                        "value": "Not a minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8f0daa39c39bac816583bed47118324ef9cb0bd9d20d7485ca08e731f62c009",
                          "typeString": "literal_string \"Not a minter\""
                        }
                      ],
                      "id": 3746,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "783:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "783:45:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3753,
                  "nodeType": "ExpressionStatement",
                  "src": "783:45:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3755,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "847:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RootedToken_$3771",
                                "typeString": "contract RootedToken"
                              }
                            },
                            "id": 3756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 330,
                            "src": "847:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 3757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "847:18:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "869:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "847:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479206d696e746564",
                        "id": 3760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "872:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59",
                          "typeString": "literal_string \"Already minted\""
                        },
                        "value": "Already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59",
                          "typeString": "literal_string \"Already minted\""
                        }
                      ],
                      "id": 3754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "839:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "839:50:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3762,
                  "nodeType": "ExpressionStatement",
                  "src": "839:50:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3764,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "906:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "906:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3766,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3743,
                        "src": "918:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3763,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 633,
                      "src": "900:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:25:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3768,
                  "nodeType": "ExpressionStatement",
                  "src": "900:25:28"
                }
              ]
            },
            "functionSelector": "a0712d68",
            "id": 3770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3743,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3770,
                  "src": "749:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "748:16:28"
            },
            "returnParameters": {
              "id": 3745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:0:28"
            },
            "scope": 3771,
            "src": "735:198:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3772,
        "src": "496:440:28"
      }
    ],
    "src": "45:891:28"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/G/projects/degen-protocol/SH33P-contracts/contracts/RootedToken.sol",
      "exportedSymbols": {
        "Address": [
          284
        ],
        "ERC20": [
          753
        ],
        "GatedERC20": [
          1548
        ],
        "IERC20": [
          1632
        ],
        "IGatedERC20": [
          1705
        ],
        "ILiquidityLockedERC20": [
          1802
        ],
        "IOwned": [
          1865
        ],
        "IPancakePair": [
          2170
        ],
        "ITokensRecoverable": [
          2575
        ],
        "ITransferGate": [
          2596
        ],
        "LiquidityLockedERC20": [
          2987
        ],
        "Owned": [
          3238
        ],
        "RootedToken": [
          3771
        ],
        "SafeERC20": [
          4295
        ],
        "SafeMath": [
          4504
        ],
        "TokensRecoverable": [
          4565
        ]
      },
      "license": "U-U-U-UPPPPP"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".4"
          ]
        },
        "id": 3718,
        "name": "PragmaDirective",
        "src": "45:23:28"
      },
      {
        "attributes": {
          "SourceUnit": 2988,
          "absolutePath": "/G/projects/degen-protocol/SH33P-contracts/contracts/LiquidityLockedERC20.sol",
          "file": "./LiquidityLockedERC20.sol",
          "scope": 3772,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3719,
        "name": "ImportDirective",
        "src": "456:36:28"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            753,
            1548,
            1632,
            1705,
            1802,
            1865,
            2575,
            2987,
            3238,
            4565
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            3771,
            2987,
            1802,
            1548,
            1705,
            4565,
            2575,
            3238,
            1865,
            753,
            1632
          ],
          "name": "RootedToken",
          "scope": 3772
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "name": "LiquidityLockedERC20",
                  "referencedDeclaration": 2987,
                  "type": "contract LiquidityLockedERC20"
                },
                "id": 3720,
                "name": "UserDefinedTypeName",
                "src": "520:20:28"
              },
              {
                "attributes": {
                  "hexvalue": "446567656e2050726f746f636f6c",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"Degen Protocol\"",
                  "value": "Degen Protocol"
                },
                "id": 3721,
                "name": "Literal",
                "src": "541:16:28"
              },
              {
                "attributes": {
                  "hexvalue": "5348333350",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"SH33P\"",
                  "value": "SH33P"
                },
                "id": 3722,
                "name": "Literal",
                "src": "559:7:28"
              }
            ],
            "id": 3723,
            "name": "InheritanceSpecifier",
            "src": "520:47:28"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "07546172",
              "mutability": "mutable",
              "name": "minter",
              "scope": 3771,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 3724,
                "name": "ElementaryTypeName",
                "src": "575:7:28"
              }
            ],
            "id": 3725,
            "name": "VariableDeclaration",
            "src": "575:21:28"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 3771,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3726,
                "name": "ParameterList",
                "src": "616:2:28"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3727,
                "name": "ParameterList",
                "src": "619:0:28"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 3728,
                "name": "Block",
                "src": "619:10:28"
              }
            ],
            "id": 3729,
            "name": "FunctionDefinition",
            "src": "605:24:28"
          },
          {
            "attributes": {
              "functionSelector": "fca3b5aa",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setMinter",
              "scope": 3771,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_minter",
                      "scope": 3741,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3730,
                        "name": "ElementaryTypeName",
                        "src": "656:7:28"
                      }
                    ],
                    "id": 3731,
                    "name": "VariableDeclaration",
                    "src": "656:15:28"
                  }
                ],
                "id": 3732,
                "name": "ParameterList",
                "src": "655:17:28"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3735,
                "name": "ParameterList",
                "src": "692:0:28"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
                },
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3194,
                      "type": "modifier ()",
                      "value": "ownerOnly"
                    },
                    "id": 3733,
                    "name": "Identifier",
                    "src": "680:9:28"
                  }
                ],
                "id": 3734,
                "name": "ModifierInvocation",
                "src": "680:11:28"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3725,
                              "type": "address",
                              "value": "minter"
                            },
                            "id": 3736,
                            "name": "Identifier",
                            "src": "703:6:28"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3731,
                              "type": "address",
                              "value": "_minter"
                            },
                            "id": 3737,
                            "name": "Identifier",
                            "src": "712:7:28"
                          }
                        ],
                        "id": 3738,
                        "name": "Assignment",
                        "src": "703:16:28"
                      }
                    ],
                    "id": 3739,
                    "name": "ExpressionStatement",
                    "src": "703:16:28"
                  }
                ],
                "id": 3740,
                "name": "Block",
                "src": "692:35:28"
              }
            ],
            "id": 3741,
            "name": "FunctionDefinition",
            "src": "637:90:28"
          },
          {
            "attributes": {
              "functionSelector": "a0712d68",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 3771,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 3770,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3742,
                        "name": "ElementaryTypeName",
                        "src": "749:7:28"
                      }
                    ],
                    "id": 3743,
                    "name": "VariableDeclaration",
                    "src": "749:14:28"
                  }
                ],
                "id": 3744,
                "name": "ParameterList",
                "src": "748:16:28"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3745,
                "name": "ParameterList",
                "src": "772:0:28"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c8f0daa39c39bac816583bed47118324ef9cb0bd9d20d7485ca08e731f62c009",
                                  "typeString": "literal_string \"Not a minter\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 3746,
                            "name": "Identifier",
                            "src": "783:7:28"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 3747,
                                    "name": "Identifier",
                                    "src": "791:3:28"
                                  }
                                ],
                                "id": 3748,
                                "name": "MemberAccess",
                                "src": "791:10:28"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3725,
                                  "type": "address",
                                  "value": "minter"
                                },
                                "id": 3749,
                                "name": "Identifier",
                                "src": "805:6:28"
                              }
                            ],
                            "id": 3750,
                            "name": "BinaryOperation",
                            "src": "791:20:28"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f742061206d696e746572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not a minter\"",
                              "value": "Not a minter"
                            },
                            "id": 3751,
                            "name": "Literal",
                            "src": "813:14:28"
                          }
                        ],
                        "id": 3752,
                        "name": "FunctionCall",
                        "src": "783:45:28"
                      }
                    ],
                    "id": 3753,
                    "name": "ExpressionStatement",
                    "src": "783:45:28"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59",
                                  "typeString": "literal_string \"Already minted\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 3754,
                            "name": "Identifier",
                            "src": "839:7:28"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "totalSupply",
                                      "referencedDeclaration": 330,
                                      "type": "function () view external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -28,
                                          "type": "contract RootedToken",
                                          "value": "this"
                                        },
                                        "id": 3755,
                                        "name": "Identifier",
                                        "src": "847:4:28"
                                      }
                                    ],
                                    "id": 3756,
                                    "name": "MemberAccess",
                                    "src": "847:16:28"
                                  }
                                ],
                                "id": 3757,
                                "name": "FunctionCall",
                                "src": "847:18:28"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 3758,
                                "name": "Literal",
                                "src": "869:1:28"
                              }
                            ],
                            "id": 3759,
                            "name": "BinaryOperation",
                            "src": "847:23:28"
                          },
                          {
                            "attributes": {
                              "hexvalue": "416c7265616479206d696e746564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Already minted\"",
                              "value": "Already minted"
                            },
                            "id": 3760,
                            "name": "Literal",
                            "src": "872:16:28"
                          }
                        ],
                        "id": 3761,
                        "name": "FunctionCall",
                        "src": "839:50:28"
                      }
                    ],
                    "id": 3762,
                    "name": "ExpressionStatement",
                    "src": "839:50:28"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 633,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 3763,
                            "name": "Identifier",
                            "src": "900:5:28"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 3764,
                                "name": "Identifier",
                                "src": "906:3:28"
                              }
                            ],
                            "id": 3765,
                            "name": "MemberAccess",
                            "src": "906:10:28"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3743,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 3766,
                            "name": "Identifier",
                            "src": "918:6:28"
                          }
                        ],
                        "id": 3767,
                        "name": "FunctionCall",
                        "src": "900:25:28"
                      }
                    ],
                    "id": 3768,
                    "name": "ExpressionStatement",
                    "src": "900:25:28"
                  }
                ],
                "id": 3769,
                "name": "Block",
                "src": "772:161:28"
              }
            ],
            "id": 3770,
            "name": "FunctionDefinition",
            "src": "735:198:28"
          }
        ],
        "id": 3771,
        "name": "ContractDefinition",
        "src": "496:440:28"
      }
    ],
    "id": 3772,
    "name": "SourceUnit",
    "src": "45:891:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {
    "25": {
      "events": {},
      "links": {},
      "address": "0x0694c9bf930b7456712cEde98bE770e110212B38",
      "transactionHash": "0x28a46bfbbf90181f3a5c7e7083bc88b7b57a3d0a20161ac77c914a0e2ca3eacc"
    },
    "97": {
      "events": {},
      "links": {},
      "address": "0xd5F2b59479377392e3f1F269e44794B029c98705",
      "transactionHash": "0xc2700d74b9e30d661c2a07164f7d5a3ee978c77c48abbee526c605a45d434a46"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-01-17T07:36:50.995Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}